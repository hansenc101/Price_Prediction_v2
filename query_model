#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri May  5 21:24:09 2023

@author: Christopher Hansen
email: hansenc101@gmail.com
"""

import torch
import torch.nn as nn
import LightningLearning as LL
import TorchUtils as tu
import numpy as np
import pytorch_lightning as pl
import matplotlib.pyplot as plt
from pytorch_lightning.callbacks import TQDMProgressBar as bar
import StockPriceRetrieval as spr


use_gpu = False
device = torch.device('cpu')
if torch.cuda.is_available():
    device = torch.device('cuda')
    use_gpu=True

#%% Retrieve Stock Data 
predict_stock='msft'
#feature_stocks=[predict_stock, 'tsla','meta','sony','amzn','nflx','gbtc','gdx','intc','dal',
#                'c','goog','aapl','msft','ibm','hp','orcl','sap','crm','hubs','twlo']
feature_stocks=[predict_stock, 'tsla']
n_features = len(feature_stocks)-1

#%% 
print('This model is designed to predict "', predict_stock.upper(), '" prices with 30 days of historical data as input.')
days = 30 # The model was trained using 30 days of previous data 
input_data = spr.get_days_of_data(predict_date='2023-05-10', feature_stocks=feature_stocks, days=days)
test = spr.get_prices(tickers=feature_stocks,start='2023-03-28',end='2023-05-10')
#%%
